import numpy as np
import matplotlib.pyplot as plt
from matplotlib.colors import Normalize
from matplotlib.cm import ScalarMappable

# Define the size of the large square
large_square_size = 11

# Define the size of the smaller squares
small_square_size = 1

# Define the number of small squares along each side (excluding corners)
num_squares_side = 8

# Create the figure and axis
fig, ax = plt.subplots(figsize=(8, 8))

# Plot the large square
large_square = plt.Rectangle((0, 0), large_square_size, large_square_size, color='lightgrey', alpha=0.5)
ax.add_patch(large_square)

# Store the Coordinates
coords = [(10,0), (9,0), (8,0), (7,0), (6,0), (5,0), (4,0), (3,0), (2,0), (1,0), 
          (0,0), (0,1), (0,2), (0,3), (0,4), (0,5), (0,6), (0,7), (0,8), (0,9), (0,10),
          (1,10), (2,10), (3,10), (4,10), (5,10), (6,10), (7,10), (8,10), (9,10), (10,10),
          (10,9), (10,8), (10,7), (10,6), (10,5), (10,4), (10,3), (10,2), (10,1)]

# Distributions overall measured
percent_overall = [0.025936050209347312, 0.02091559462399479, 0.01851101265701852, 0.021301745309358938, 0.02301022178874452, 0.029232340209008698, 0.022404511263741152, 0.008559795259792172, 0.02302962135408323, 0.022825458458620974, 0.053336037196446105, 0.026714925227968995, 0.025676434941877706, 0.0234599177370781, 0.024287116371769415, 0.028886449464964953, 0.027571690670074134, 0.025679327346950796, 0.02893453935133171, 0.030509673035226486, 0.02845711721699445, 0.02800376924205343, 0.010330589921207087, 0.026985759521176655, 0.03141154830998671, 0.030270187738417078, 0.026707416661264104, 0.026437663367932244, 0.02765118798526486, 0.025503796340090857, 0.025978793528760775, 0.026336896649779794, 0.02586745054155318, 0.023301974890359588, 0.02459768471446601, 0.023963196219796024, 0.008564908097042585, 0.021523408716324043, 0.02148402526138942, 0.0258401625987424]

percent_steady = [0.02978677719743399, 0.020799923403571202, 0.018489717563758726, 0.02107146879502474, 0.02263477558740769, 0.028839570968337856, 0.02196207937177183, 0.008412714781191212, 0.022537929364383855, 0.022379114181934175, 0.06111341208315677, 0.026281562743575855, 0.025322823284591865, 0.023097133117132067, 0.0239888196476139, 0.02843325264271593, 0.027197395314781016, 0.02549736430072683, 0.02859497785485687, 0.030043295785026597, 0.02808654715493613, 0.02761715069348468, 0.010207851413554694, 0.026634767019322377, 0.031026016988278782, 0.029854180767789423, 0.026363271130967546, 0.026077694076659882, 0.027332479634587226, 0.025164647893457685, 0.025641353502926467, 0.026045963279504418, 0.025525512990989055, 0.023380987102005767, 0.024308965845350746, 0.023680937172942552, 0.008435935858793753, 0.021310344944218546, 0.021215951448901788, 0.025605333092381583]

percent_winners = [0.024943094696139964, 0.020343050886198918, 0.018295412337260356, 0.021219249707140068, 0.022822439578789638, 0.02954313850608101, 0.02309228341857224, 0.00877151210963914, 0.024536741619761458, 0.023089108785163032, 0.05277828042806757, 0.027432007288958307, 0.025365320939564503, 0.023939910538830527, 0.02492404689568472, 0.0286415426178662, 0.027571691158963418, 0.025285955104334328, 0.028978053759242152, 0.030698705067032383, 0.02961932970790198, 0.027330419019863682, 0.010244542011511221, 0.02701613031235218, 0.031165376178185825, 0.029279643933116824, 0.02646374409915015, 0.026473267999377773, 0.02761296139328311, 0.025822468150490323, 0.024806585459544058, 0.025762150115715386, 0.025743102315260145, 0.022997044416296027, 0.02358117696359013, 0.022622437674009593, 0.008285793198030458, 0.024368486049073483, 0.02012082654755442, 0.028412969012403293]

# Space names
board_layout = ["Go","Med Ave","Com Ches","Balt Ave","Inc Tax","Read Rl","Orient","Chance","Vermont","Conn Ave","Jail","St Chas","Elec Co","States","Virginia","Penn Rl","St James","Com Ches","Tenn Ave","New York","Free Pk","Kentucky","Chance","Indiana","Illinois","B&O Rl","Atlantic","Ventnor","Water W","Marvin G","Go Jail","Pacific","North C","Com Ches","Penn Ave","Short Ln","Chance","Park Pl","Lux Tax","Boardwalk"
]

# Define the colormap (using 'inferno' colormap)
cmap = plt.cm.PuRd

# Normalize the numbers to range from 0 to 1
norm = Normalize(vmin=0, vmax=max(percent_steady))

# Create a scalar mappable
sm = ScalarMappable(norm=norm, cmap=cmap)

# Map the numbers to colors
data = percent_overall
colors = [sm.to_rgba(number) for number in data]

for i, coord in enumerate(coords):
    small_square = plt.Rectangle(coord, small_square_size, small_square_size, color=colors[i])
    ax.add_patch(small_square)
    ax.text(coord[0]+0.5, coord[1]+0.5, f'{board_layout[i]}\n{f"{100*data[i]:0.2f}%"}', color='black', ha='center', va='center', fontsize=8)

# Set axis limits and labels
ax.set_xlim(0, large_square_size)
ax.set_ylim(0, large_square_size)
# ax.set_xticks(np.arange(0, large_square_size + 1, 1))
# ax.set_yticks(np.arange(0, large_square_size + 1, 1))
ax.set_xticklabels("")
ax.set_yticklabels("")
ax.set_aspect('equal')

# Show the plot
plt.title('Measured Space Distribution')
# plt.grid(True)
plt.tick_params(left = False, bottom = False)
plt.tight_layout()
plt.show()
